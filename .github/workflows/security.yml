name: Security Scan

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Mondays

jobs:
  security-scan:
    runs-on: self-hosted
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Run Security Checks
      run: |
        echo "Running basic security checks..."
        
        # Check for common security issues in C code
        echo "Checking for potentially unsafe functions..."
        
        # Look for dangerous functions
        if grep -r "strcpy\|strcat\|sprintf\|gets" src/ include/ 2>/dev/null; then
          echo "⚠️  Found potentially unsafe string functions"
        else
          echo "✅ No unsafe string functions found"
        fi
        
        # Check for buffer operations
        if grep -r "memcpy\|memset\|memmove" src/ include/ 2>/dev/null; then
          echo "ℹ️  Found memory operations - ensure bounds checking"
        fi
        
        # Check for hardcoded values that might be security-sensitive
        if grep -r "password\|secret\|key\|token" src/ include/ 2>/dev/null | grep -v "// " | grep -v "/\*"; then
          echo "⚠️  Found potential hardcoded secrets"
        else
          echo "✅ No obvious hardcoded secrets found"
        fi
        
        echo "Basic security scan completed"

    - name: Check File Permissions
      run: |
        echo "Checking file permissions..."
        
        # Check for executable files that shouldn't be
        find . -type f -name "*.c" -o -name "*.h" -o -name "*.md" | while read file; do
          if [ -x "$file" ]; then
            echo "⚠️  Source file has execute permission: $file"
          fi
        done
        
        echo "Permission check completed"

    - name: Validate Build Security
      run: |
        echo "Validating build configuration security..."
        
        # Check compiler flags for security features
        if grep -q "\-fstack-protector\|\-D_FORTIFY_SOURCE\|\-Wformat-security" Makefile; then
          echo "✅ Security compiler flags found"
        else
          echo "ℹ️  Consider adding security compiler flags"
        fi
        
        # Check linker configuration
        if [ -f "config/linker.ld" ]; then
          echo "✅ Custom linker script present"
        fi
        
        echo "Build security validation completed"